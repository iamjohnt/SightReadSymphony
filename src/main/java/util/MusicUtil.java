package util;

import notecontext.NamedNote;
import java.util.Arrays;

/** Overview - provides convenient static utility methods, that may be used accross the application */
public class MusicUtil {

    // set as private static, so you can not actually get a reference to this directly
    private static NamedNote[] namedNoteArray = new NamedNote[]{
            new NamedNote(NamedNote.A_0),
            new NamedNote(NamedNote.A_SHARP_0),
            new NamedNote(NamedNote.B_FLAT_0),
            new NamedNote(NamedNote.B_0),

            new NamedNote(NamedNote.C_1),
            new NamedNote(NamedNote.C_SHARP_1),
            new NamedNote(NamedNote.D_FLAT_1),
            new NamedNote(NamedNote.D_1),
            new NamedNote(NamedNote.D_SHARP_1),
            new NamedNote(NamedNote.E_FLAT_1),
            new NamedNote(NamedNote.E_1),
            new NamedNote(NamedNote.F_1),
            new NamedNote(NamedNote.F_SHARP_1),
            new NamedNote(NamedNote.G_FLAT_1),
            new NamedNote(NamedNote.G_1),
            new NamedNote(NamedNote.G_SHARP_1),
            new NamedNote(NamedNote.A_FLAT_1),
            new NamedNote(NamedNote.A_1),
            new NamedNote(NamedNote.A_SHARP_1),
            new NamedNote(NamedNote.B_FLAT_1),
            new NamedNote(NamedNote.B_1),

            new NamedNote(NamedNote.C_2),
            new NamedNote(NamedNote.C_SHARP_2),
            new NamedNote(NamedNote.D_FLAT_2),
            new NamedNote(NamedNote.D_2),
            new NamedNote(NamedNote.D_SHARP_2),
            new NamedNote(NamedNote.E_FLAT_2),
            new NamedNote(NamedNote.E_2),
            new NamedNote(NamedNote.F_2),
            new NamedNote(NamedNote.F_SHARP_2),
            new NamedNote(NamedNote.G_FLAT_2),
            new NamedNote(NamedNote.G_2),
            new NamedNote(NamedNote.G_SHARP_2),
            new NamedNote(NamedNote.A_FLAT_2),
            new NamedNote(NamedNote.A_2),
            new NamedNote(NamedNote.A_SHARP_2),
            new NamedNote(NamedNote.B_FLAT_2),
            new NamedNote(NamedNote.B_2),

            new NamedNote(NamedNote.C_3),
            new NamedNote(NamedNote.C_SHARP_3),
            new NamedNote(NamedNote.D_FLAT_3),
            new NamedNote(NamedNote.D_3),
            new NamedNote(NamedNote.D_SHARP_3),
            new NamedNote(NamedNote.E_FLAT_3),
            new NamedNote(NamedNote.E_3),
            new NamedNote(NamedNote.F_3),
            new NamedNote(NamedNote.F_SHARP_3),
            new NamedNote(NamedNote.G_FLAT_3),
            new NamedNote(NamedNote.G_3),
            new NamedNote(NamedNote.G_SHARP_3),
            new NamedNote(NamedNote.A_FLAT_3),
            new NamedNote(NamedNote.A_3),
            new NamedNote(NamedNote.A_SHARP_3),
            new NamedNote(NamedNote.B_FLAT_3),
            new NamedNote(NamedNote.B_3),

            new NamedNote(NamedNote.C_4),
            new NamedNote(NamedNote.C_SHARP_4),
            new NamedNote(NamedNote.D_FLAT_4),
            new NamedNote(NamedNote.D_4),
            new NamedNote(NamedNote.D_SHARP_4),
            new NamedNote(NamedNote.E_FLAT_4),
            new NamedNote(NamedNote.E_4),
            new NamedNote(NamedNote.F_4),
            new NamedNote(NamedNote.F_SHARP_4),
            new NamedNote(NamedNote.G_FLAT_4),
            new NamedNote(NamedNote.G_4),
            new NamedNote(NamedNote.G_SHARP_4),
            new NamedNote(NamedNote.A_FLAT_4),
            new NamedNote(NamedNote.A_4),
            new NamedNote(NamedNote.A_SHARP_4),
            new NamedNote(NamedNote.B_FLAT_4),
            new NamedNote(NamedNote.B_4),

            new NamedNote(NamedNote.C_5),
            new NamedNote(NamedNote.C_SHARP_5),
            new NamedNote(NamedNote.D_FLAT_5),
            new NamedNote(NamedNote.D_5),
            new NamedNote(NamedNote.D_SHARP_5),
            new NamedNote(NamedNote.E_FLAT_5),
            new NamedNote(NamedNote.E_5),
            new NamedNote(NamedNote.F_5),
            new NamedNote(NamedNote.F_SHARP_5),
            new NamedNote(NamedNote.G_FLAT_5),
            new NamedNote(NamedNote.G_5),
            new NamedNote(NamedNote.G_SHARP_5),
            new NamedNote(NamedNote.A_FLAT_5),
            new NamedNote(NamedNote.A_5),
            new NamedNote(NamedNote.A_SHARP_5),
            new NamedNote(NamedNote.B_FLAT_5),
            new NamedNote(NamedNote.B_5),

            new NamedNote(NamedNote.C_6),
            new NamedNote(NamedNote.C_SHARP_6),
            new NamedNote(NamedNote.D_FLAT_6),
            new NamedNote(NamedNote.D_6),
            new NamedNote(NamedNote.D_SHARP_6),
            new NamedNote(NamedNote.E_FLAT_6),
            new NamedNote(NamedNote.E_6),
            new NamedNote(NamedNote.F_6),
            new NamedNote(NamedNote.F_SHARP_6),
            new NamedNote(NamedNote.G_FLAT_6),
            new NamedNote(NamedNote.G_6),
            new NamedNote(NamedNote.G_SHARP_6),
            new NamedNote(NamedNote.A_FLAT_6),
            new NamedNote(NamedNote.A_6),
            new NamedNote(NamedNote.A_SHARP_6),
            new NamedNote(NamedNote.B_FLAT_6),
            new NamedNote(NamedNote.B_6),

            new NamedNote(NamedNote.C_7),
            new NamedNote(NamedNote.C_SHARP_7),
            new NamedNote(NamedNote.D_FLAT_7),
            new NamedNote(NamedNote.D_7),
            new NamedNote(NamedNote.D_SHARP_7),
            new NamedNote(NamedNote.E_FLAT_7),
            new NamedNote(NamedNote.E_7),
            new NamedNote(NamedNote.F_7),
            new NamedNote(NamedNote.F_SHARP_7),
            new NamedNote(NamedNote.G_FLAT_7),
            new NamedNote(NamedNote.G_7),
            new NamedNote(NamedNote.G_SHARP_7),
            new NamedNote(NamedNote.A_FLAT_7),
            new NamedNote(NamedNote.A_7),
            new NamedNote(NamedNote.A_SHARP_7),
            new NamedNote(NamedNote.B_FLAT_7),
            new NamedNote(NamedNote.B_7),

            new NamedNote(NamedNote.C_8)
    };

    /** returns an array of all the NamedNotes in an 88 keyboard */
    public static NamedNote[] getAllNamedNotesAsArray() {
        // returns only a copy, so the caller can't modify the contents of the original array
        return Arrays.copyOf(namedNoteArray, namedNoteArray.length);
    }
}
